/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telasPrincipais;

import classes.Cliente;
import dados.ClientesDados;
import static dados.ClientesDados.lstClientes;
import java.util.List;
import java.util.Vector;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Leandro
 */
public class ClientePrincipal extends javax.swing.JDialog {
    
    private void carregarTbClientes(List<Cliente> lstClientes){
        try {
            DefaultTableModel modelo = (DefaultTableModel)tblCLiente.getModel();
            modelo.getDataVector().removeAllElements();
            
            for (Cliente cliente : lstClientes) {
                Vector v = new Vector();
                v.add(cliente.getNome());
                v.add(cliente.getEndereco());
                v.add(cliente.getCPFOuCNPJ());
                v.add(cliente.getDtNascOuDesc());
                v.add(cliente.getCNH2());

                modelo.addRow(v);
            }
            tblCLiente.repaint();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this,
                    "Não foi possível carregar a lista de clientes.\n\n" + 
                            e.getMessage(),"ERRO",JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * Creates new form ClientePrincipal
     */
    public ClientePrincipal(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCLiente = new javax.swing.JTable();
        btNovoCliente = new javax.swing.JButton();
        btAlterarCliente = new javax.swing.JButton();
        btBuscarCliente = new javax.swing.JButton();
        txtBuscaCPFouCNPJOuNome = new javax.swing.JTextField();
        rCPFouCNPJ = new javax.swing.JRadioButton();
        rNome = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        tblCLiente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Endereço", "CPF/CNPJ", "Data Nascimento/Desconto", "CNH"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblCLiente);

        btNovoCliente.setText("Novo");
        btNovoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNovoClienteActionPerformed(evt);
            }
        });

        btAlterarCliente.setText("Alterar");
        btAlterarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAlterarClienteActionPerformed(evt);
            }
        });

        btBuscarCliente.setText("Buscar");
        btBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btBuscarClienteActionPerformed(evt);
            }
        });

        buttonGroup1.add(rCPFouCNPJ);
        rCPFouCNPJ.setSelected(true);
        rCPFouCNPJ.setText("CPF/CNPJ");
        rCPFouCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rCPFouCNPJActionPerformed(evt);
            }
        });

        buttonGroup1.add(rNome);
        rNome.setText("Nome");

        jButton1.setText("Voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 693, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rNome)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(txtBuscaCPFouCNPJOuNome, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btBuscarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(54, 54, 54)
                        .addComponent(btAlterarCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btNovoCliente)
                        .addGap(16, 16, 16))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(rCPFouCNPJ)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(75, 75, 75)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btNovoCliente)
                            .addComponent(btAlterarCliente)
                            .addComponent(jButton1))
                        .addContainerGap(16, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(rCPFouCNPJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rNome)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btBuscarCliente)
                            .addComponent(txtBuscaCPFouCNPJOuNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btNovoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNovoClienteActionPerformed
         JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
         FCadClientes c = new FCadClientes(frame,true);
         c.setLocationRelativeTo(null);
       //  c.setVisible(true);
         
         Cliente cliente = c.execute();
         if(cliente != null){
             ClientesDados.lstClientes.add(cliente);
             this.carregarTbClientes(ClientesDados.lstClientes);
         }
         
    }//GEN-LAST:event_btNovoClienteActionPerformed

    private void btAlterarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAlterarClienteActionPerformed
        try {
                if(ClientesDados.lstClientes.size()>0){
                    String nome = 
                        tblCLiente.getValueAt(tblCLiente.getSelectedRow(), 0).toString();
                    Cliente cli = ClientesDados.obterPessoaPeloNomeExato(
                            nome, ClientesDados.lstClientes);
                
                if(cli !=null){
                    if(JOptionPane.showConfirmDialog(this,
                            "Deseja alterar " + cli.getNome()+ " ?",
                            "Cadastro",
                            JOptionPane.YES_NO_OPTION,
                                JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION){
                        
                        JFrame frame = (JFrame) SwingUtilities.getWindowAncestor(this);
                        FCadClientes c = new FCadClientes(frame,true);
                        c.setLocationRelativeTo(null);
                        cli = c.execute(cli);
                        this.carregarTbClientes(ClientesDados.lstClientes);
                }
            }
        }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, 
                    "Nenhum cliente selecionado.\n\n" + e.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
     
    }//GEN-LAST:event_btAlterarClienteActionPerformed

    private void btBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btBuscarClienteActionPerformed
        if(rNome.isSelected()){
            if(txtBuscaCPFouCNPJOuNome.getText().trim().equals("")){
                this.carregarTbClientes(ClientesDados.lstClientes);
                
            }else{
                List<Cliente> clienteTemp = 
                        ClientesDados.obterPessoaPeloNomeParcial(
                                txtBuscaCPFouCNPJOuNome.getText().trim(),
                                ClientesDados.lstClientes,
                                false);
                 if(clienteTemp.size()>0){
                    this.carregarTbClientes(clienteTemp);
                    
                }else{
                    JOptionPane.showMessageDialog(null,"Não foram encontrados Clientes com o nome digitado");
                }
            }
        }else if(rCPFouCNPJ.isSelected()){
            if(txtBuscaCPFouCNPJOuNome.getText().trim().equals("")){
                this.carregarTbClientes(ClientesDados.lstClientes);
                
            }else{
                List<Cliente> clienteTemp = 
                        ClientesDados.obterCPFOuCNPJParcial(
                                txtBuscaCPFouCNPJOuNome.getText().trim(),
                                ClientesDados.lstClientes);
                
                if(clienteTemp.size()>0){
                    this.carregarTbClientes(clienteTemp);
                    
                }else{
                    JOptionPane.showMessageDialog(null,"Não foram encontrados Clientes com esse CPF/CNPJ");
                }
                
            }
        }
    }//GEN-LAST:event_btBuscarClienteActionPerformed

    private void rCPFouCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rCPFouCNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rCPFouCNPJActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        this.carregarTbClientes(lstClientes);
    }//GEN-LAST:event_formWindowOpened

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    /***
     **BOTÃO EXCLUIR
     * 
     * try {

            if (DadosClientes.lstClientes.size() > 0) {
                String nome = tabelaCliente.getValueAt(tabelaCliente.getSelectedRow(), 0).toString();
                Cliente c = DadosClientes.obterClientePeloNomeExato(nome, DadosClientes.lstClientes);
                if (c != null) {

                    if (JOptionPane.showConfirmDialog(this,
                            "Deseja apagar " + c.getNome() + "?",
                            "Cadastro",
                            JOptionPane.YES_NO_OPTION,
                            JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                        DadosClientes.lstClientes.remove(c);
                        this.carregarTabelaClientes(DadosClientes.lstClientes);
                    }
                }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,
                    "Não foi possível excluir o cliente.\n\n" + ex.getMessage(),
                    "Erro",
                    JOptionPane.ERROR_MESSAGE);
        }
    
     ****/
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ClientePrincipal dialog = new ClientePrincipal(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAlterarCliente;
    private javax.swing.JButton btBuscarCliente;
    private javax.swing.JButton btNovoCliente;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton rCPFouCNPJ;
    private javax.swing.JRadioButton rNome;
    private javax.swing.JTable tblCLiente;
    private javax.swing.JTextField txtBuscaCPFouCNPJOuNome;
    // End of variables declaration//GEN-END:variables
}
