/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telasPrincipais;

import classes.Cliente;
import classes.PessoaFisica;
import classes.PessoaJuridica;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author Leandro
 */
public class FCadClientes extends javax.swing.JDialog {

    private Cliente clienteTemp = null;
    private boolean alterar = false;
    
    
    public Cliente execute(){
        this.setVisible(true);
        return this.clienteTemp;
    }
    
    public Cliente execute(Cliente cli){
        this.clienteTemp = cli;
        this.alterar = true;
        
        rPF.setEnabled(false);
        rPJ.setEnabled(false);
        
        txtNome.setText(cli.getNome());
        txtEnd.setText(cli.getEndereco());
        
        txtCNH.setText(cli.getCNH2());
        txtNascouDesc.setText(cli.getDtNascOuDesc());
        txtCPFouCNPJ.setText(cli.getCPFOuCNPJ());
        
        if(cli instanceof PessoaFisica){
            rPF.setEnabled(true);
            PessoaFisica x = (PessoaFisica)cli;
           
            txtCPFouCNPJ.setText(x.getCPF());
            txtCNH.setText(x.getCNH());
            
           // DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
           // LocalDate data = LocalDate.parse(txtNascouDesc.getText(),formatter);
            //x.setDtNascimento(data);
            
           // txtNasc.setText(LocalDate.parse(x.getDtNascimento()));
        }else{
            rPJ.setEnabled(true);
            PessoaJuridica x = (PessoaJuridica)cli;
            
            txtCPFouCNPJ.setText(x.getCNPJ());
            txtCNH.setText(x.getCNHResponsavel());
            //txtDesconto.setText(x.getDescontoLocacao());
        }
        
        this.setVisible(true);
        return this.clienteTemp;
    }
    /**
     * Creates new form FCadClientes
     */
    public FCadClientes(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        txtNome = new javax.swing.JTextField();
        txtEnd = new javax.swing.JTextField();
        rPF = new javax.swing.JRadioButton();
        rPJ = new javax.swing.JRadioButton();
        txtNascouDesc = new javax.swing.JFormattedTextField();
        txtCPFouCNPJ = new javax.swing.JFormattedTextField();
        txtCNH = new javax.swing.JFormattedTextField();
        btGravar = new javax.swing.JButton();
        btVoltar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        lblNascOuDesc = new javax.swing.JLabel();
        lblCPFCNPJ = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cliente");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txtEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEndActionPerformed(evt);
            }
        });

        buttonGroup1.add(rPF);
        rPF.setSelected(true);
        rPF.setText("Pessoa Física");
        rPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rPFActionPerformed(evt);
            }
        });

        buttonGroup1.add(rPJ);
        rPJ.setText("Pessoa Jurídica");
        rPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rPJActionPerformed(evt);
            }
        });

        try {
            txtNascouDesc.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtNascouDesc.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtCPFouCNPJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCPFouCNPJActionPerformed(evt);
            }
        });

        try {
            txtCNH.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###########")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtCNH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCNHActionPerformed(evt);
            }
        });

        btGravar.setText("Gravar");
        btGravar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGravarActionPerformed(evt);
            }
        });

        btVoltar.setText("Cancelar");
        btVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btVoltarActionPerformed(evt);
            }
        });

        jLabel1.setText("Nome");

        jLabel2.setText("Endereço");

        lblNascOuDesc.setText("Data Nascimento");

        lblCPFCNPJ.setText("CPF/CNPJ");

        jLabel5.setText("CNH");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btGravar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rPJ)
                    .addComponent(jLabel1)
                    .addComponent(rPF)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 57, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCPFCNPJ)
                    .addComponent(txtCPFouCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNascouDesc, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNascOuDesc))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5)
                    .addComponent(txtCNH, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(7, 7, 7)
                        .addComponent(txtEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCNH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(7, 7, 7)
                        .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(rPF, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rPJ))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblNascOuDesc)
                        .addGap(7, 7, 7)
                        .addComponent(txtNascouDesc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblCPFCNPJ)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCPFouCNPJ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btGravar)
                    .addComponent(btVoltar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void rPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rPFActionPerformed
        try {
            if(rPF.isSelected() || rPF.isEnabled()){
                lblCPFCNPJ.setText("CPF");
                lblNascOuDesc.setText("Data de nascimento");
                MaskFormatter mask = new MaskFormatter("###.###.###-##");
                DefaultFormatterFactory dff = new DefaultFormatterFactory(mask);
                MaskFormatter mask2 = new MaskFormatter("##/##/####");
                DefaultFormatterFactory dff2 = new DefaultFormatterFactory(mask2);
                txtCPFouCNPJ.setFormatterFactory(dff);
                txtNascouDesc.setFormatterFactory(dff2);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rPFActionPerformed

    private void rPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rPJActionPerformed
        try {
            if(rPJ.isSelected() || rPJ.isEnabled()){
                lblCPFCNPJ.setText("CNPJ");
                lblNascOuDesc.setText("Desconto(%) PJ ");
                MaskFormatter mask = new MaskFormatter("##.###.###/####-##");
                DefaultFormatterFactory dff = new DefaultFormatterFactory(mask);
                txtCPFouCNPJ.setFormatterFactory(dff);
                MaskFormatter mask2 = new MaskFormatter("##");
                DefaultFormatterFactory dff2 = new DefaultFormatterFactory(mask2);
                txtNascouDesc.setFormatterFactory(dff2);
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_rPJActionPerformed

    private void btVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btVoltarActionPerformed
        this.clienteTemp = null;
        this.setVisible(false);
    }//GEN-LAST:event_btVoltarActionPerformed

    private void btGravarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGravarActionPerformed
        
        if(txtNome.getText().length() > 0 && txtNascouDesc.getText().length() > 0 && txtEnd.getText().length() > 0 && txtCPFouCNPJ.getText().contains("  ")==false && txtCNH.getText().contains("  ")==false){
            try {
                DateTimeFormatter formatter = DateTimeFormatter.ofPattern("dd/MM/yyyy");
                Cliente cliente = null;
                if(rPF.isSelected()){
                    if(this.alterar){
                        cliente = this.clienteTemp; 
                    }else{
                        cliente = new PessoaFisica();

                    }
                    PessoaFisica x = (PessoaFisica)cliente;
                    x.setCPF(txtCPFouCNPJ.getText());
                    x.setCNH(txtCNH.getText());
                    LocalDate data = LocalDate.parse(txtNascouDesc.getText(),formatter);
                    x.setDtNascimento(data);

                }else if(rPJ.isSelected()){
                    if(this.alterar == true){
                        cliente = this.clienteTemp;
                    }else{
                       cliente = new PessoaJuridica();
                    }
                    PessoaJuridica x = (PessoaJuridica)cliente;

                    x.setCNPJ(txtCPFouCNPJ.getText());
                    x.setCNHResponsavel(txtCNH.getText());
                    x.setDescontoLocacao(txtNascouDesc.getText());
                }
                cliente.setNome(txtNome.getText().toUpperCase());
                cliente.setEndereco(txtEnd.getText().toUpperCase());

                 this.clienteTemp = cliente;
                 this.setVisible(false);

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, 
                        "Não foi possível gravar pessoa. \n\n" + e.getMessage(),
                        "Erro",
                        JOptionPane.ERROR_MESSAGE);
            }
        }else{
            JOptionPane.showMessageDialog(this, "Todos os campos devem ser preenchidos!");
        }
    }//GEN-LAST:event_btGravarActionPerformed

    private void txtCPFouCNPJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCPFouCNPJActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCPFouCNPJActionPerformed

    private void txtEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEndActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEndActionPerformed

    private void txtCNHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCNHActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCNHActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try { //inicializar com o formato de cpf no campo
                lblCPFCNPJ.setText("CPF");
                lblNascOuDesc.setText("Data de nascimento");
                MaskFormatter mask = new MaskFormatter("###.###.###-##");
                DefaultFormatterFactory dff = new DefaultFormatterFactory(mask);
                MaskFormatter mask2 = new MaskFormatter("##/##/####");
                DefaultFormatterFactory dff2 = new DefaultFormatterFactory(mask2);
                txtCPFouCNPJ.setFormatterFactory(dff);
                txtNascouDesc.setFormatterFactory(dff2);
        } catch (Exception e) {
        }          
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FCadClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FCadClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FCadClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FCadClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FCadClientes dialog = new FCadClientes(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btGravar;
    private javax.swing.JButton btVoltar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblCPFCNPJ;
    private javax.swing.JLabel lblNascOuDesc;
    private javax.swing.JRadioButton rPF;
    private javax.swing.JRadioButton rPJ;
    private javax.swing.JFormattedTextField txtCNH;
    private javax.swing.JFormattedTextField txtCPFouCNPJ;
    private javax.swing.JTextField txtEnd;
    private javax.swing.JFormattedTextField txtNascouDesc;
    private javax.swing.JTextField txtNome;
    // End of variables declaration//GEN-END:variables
}
